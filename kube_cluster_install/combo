#REFERENCE FILE NOT SCRIPT
#QUICK KUBE CLUSTER ON UBUNTU 18.x
apt-get update && apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet kubeadm kubectl docker.io
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
systemctl restart docker
#DISABLE SWAP , EVEN FROM FSTAB FILE ALSO IF ENABLE
swapoff -a

## USE ANY ONE NETWORKING
## CALICO NETWORKING
#kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-bind-port=6444 > /kube_join.txt
#kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

## FLANNEL NETWORKING 
#Flannel
#kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-bind-port=6444 > /kube_join.txt
#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/32a765fd19ba45b387fdc5e3812c41fff47cfd55/Documentation/kube-flannel.yml

## POST INSTALLATION
#mkdir -p $HOME/.kube && cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config
#kubectl taint nodes --all node-role.kubernetes.io/master-

## OLD API ENABLEMENY WORKAROUND
#- kube-apiserver
#    - --runtime-config=apps/v1beta1=true,apps/v1beta2=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/deployments=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/podsecuritypolicies=true
#    - --advertise-address=192.168.54.21
    
## QUICK KUBE CLUSTER ON CENTOS 7.x
# cat <<EOF > /etc/yum.repos.d/kubernetes.repo
#[kubernetes]
#name=Kubernetes
#baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
#enabled=1
#gpgcheck=1
#repo_gpgcheck=1
#gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
#EOF

# Set SELinux in permissive mode (effectively disabling it)
#setenforce 0
#sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

#yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
#systemctl enable --now kubelet

#cat <<EOF >  /etc/sysctl.d/k8s.conf
#net.bridge.bridge-nf-call-ip6tables = 1
#net.bridge.bridge-nf-call-iptables = 1
#EOF
#sysctl --system

#lsmod | grep br_netfilter
#modprobe br_netfilter
## FIREWALL SETTINGS
    
#firewall-cmd --permanent --add-port=6444/tcp
#firewall-cmd --permanent --add-port=2379-2380/tcp
#firewall-cmd --permanent --add-port=10250/tcp
#firewall-cmd --permanent --add-port=10251/tcp
#firewall-cmd --permanent --add-port=10252/tcp
#firewall-cmd --permanent --add-port=10255/tcp
#firewall-cmd --reload
#modprobe br_netfilter
#echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

## TEAR DOWN
#kubeadm reset
#iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X


## FLANNEL WORKAROUND CURL FILE AND PLACE THAT SETTING
#{
#  "name": "cbr0",
#  "cniVersion":"0.3.1",
#  "plugins": [
#    {
      
## ASSIGNING CLUSTER-ADMIN ROLE WORKAROUND
#kubectl create clusterrolebinding owner-cluster-admin-binding --clusterrole cluster-admin --user system:serviceaccount:sysdigcloud:ingress-controller

