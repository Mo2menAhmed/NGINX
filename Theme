Nginx Web server Docker file

FROM nginx
RUN echo "IT WORKS !!!!! NGINX WEBSERVER" > /usr/share/nginx/html/index.html


NGINX DEPLOYMENT:

apiVersion: apps/v1beta2
kind: Deployment
metadata:
 name: new-nginx-deployment
spec:
 selector:
  matchLabels:
   app: new-nginx1
 replicas: 2
 template:
  metadata:
   labels:
    app: new-nginx1
  spec:
   containers:
   - name: new-nginx
     image: docker.io/giriraj789/new-nginx1
     ports:
     - containerPort: 80
     
     
     

kubectl expose deployment new-nginx-deployment --type=NodePort --port=80 -n nginx



INIT container:
apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels:
    app: myapp
spec:
  containers:
  - name: myapp-container
    image: busybox
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', 'echo The app is running! && sleep 3600']
  initContainers:
  - name: init-myservice
    image: busybox
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', 'echo waiting to get ready! && sleep 60']
    
    
    
    Proxy:
    
    curl http://localhost:8081/api/v1/namespaces/default/pods
    
##
kubectl -n bluegreen get pods -l version!=green
kubectl -n bluegreen get pods -l 'version notin (green, blue)'
kubectl -n bluegreen get pods -l 'version notin ( blue)'
kubectl -n bluegreen get pods -l 'version,version notin (blue)'



Replica Controller
------------------

apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        
        
        
  Deployments:
  kubectl --record deployment.apps/nginx-deployment set image deployment.v1.apps/nginx-deployment nginx=nginx:1.9.1 -n d 
  
  kubectl -n d rollout status deployment/nginx-deployment
  kubectl -n d rollout history deployment/nginx-deployment
  


